# -*- coding: utf-8 -*-
# Generated by Django 1.10.4 on 2016-12-19 10:29
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Database',
            fields=[
                ('database_id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('database_name', models.CharField(max_length=50)),
                ('schema', models.CharField(max_length=50)),
                ('type', models.CharField(choices=[('Q', 'MQTT'), ('G', 'MongoDB'), ('S', 'MySQL')], max_length=1)),
                ('ip', models.CharField(max_length=15)),
                ('port', models.IntegerField()),
                ('user_id', models.CharField(max_length=50)),
                ('password', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='DataField',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_number', models.IntegerField()),
                ('field_name', models.CharField(max_length=50)),
                ('field_type', models.CharField(choices=[('I', 'Integer'), ('F', 'Float')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Sensor',
            fields=[
                ('sensor_id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('sensor_name', models.CharField(max_length=50)),
                ('location', models.CharField(max_length=50)),
                ('mac_id', models.CharField(max_length=50)),
                ('start_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='SensorChannel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel', models.CharField(choices=[('data', 'Data'), ('H', 'Hartbeat'), ('info', 'Sensor information')], max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='SensorDatabase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purpose', models.CharField(choices=[('P', 'Primary Storage'), ('B', 'Primary Broker'), ('L', 'Local Broker')], max_length=1)),
                ('database', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meta.Database')),
                ('sensor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meta.Sensor')),
            ],
        ),
        migrations.CreateModel(
            name='SensorType',
            fields=[
                ('sensor_type', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('sensor_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.AddField(
            model_name='sensorchannel',
            name='sensor_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meta.SensorType'),
        ),
        migrations.AddField(
            model_name='sensor',
            name='channel',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meta.SensorChannel'),
        ),
        migrations.AddField(
            model_name='sensor',
            name='database',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meta.Database'),
        ),
        migrations.AddField(
            model_name='datafield',
            name='sensor_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meta.SensorChannel'),
        ),
        migrations.AlterUniqueTogether(
            name='sensordatabase',
            unique_together=set([('sensor', 'purpose', 'database')]),
        ),
        migrations.AlterUniqueTogether(
            name='sensorchannel',
            unique_together=set([('sensor_type', 'channel')]),
        ),
        migrations.AlterUniqueTogether(
            name='sensor',
            unique_together=set([('sensor_id', 'start_date')]),
        ),
        migrations.AlterUniqueTogether(
            name='datafield',
            unique_together=set([('sensor_type', 'field_number')]),
        ),
    ]
